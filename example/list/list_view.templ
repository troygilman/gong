package main

import (
	"github.com/troygilman/gong"
	"net/http"
)

type listView struct {
	UserView userView `kind:"user"`
	db       *userDatabase
}

templ (view listView) Action() {
	switch gong.GetRequest(ctx).Method {
		case http.MethodGet:
			{{
			users := view.db.ReadAll()
			}}
			for _, user := range users {
				@gong.Component("user", view.UserView, gong.ComponentWithLoaderData(user))
			}
		case http.MethodPost:
			{{
			name := gong.GetParam(ctx, "name")
			user := userData{
				name: name,
			}
			if err := view.db.Create(user); err != nil {
				return nil
			}
			}}
			@gong.Component("user", view.UserView, gong.ComponentWithLoaderData(user))
	}
}

templ (view listView) View() {
	<div>
		@gong.Form().WithSwap(gong.SwapBeforeEnd) {
			<input name="name" type="text"/>
			<button type="submit">Add</button>
		}
		@gong.Target(gong.TargetWithTrigger(gong.TriggerLoad))
	</div>
}
