package tabs

import "github.com/troygilman/gong"

func Route() gong.RouteBuilder {
	return gong.NewRoute("/", gong.NewComponent(TabsComponent{})).WithRoutes(
		gong.NewRoute("1", gong.NewComponent(TabContentComponent{"Tab 1 Content"})),
		gong.NewRoute("2", gong.NewComponent(TabContentComponent{"Tab 2 Content"})),
		gong.NewRoute("3", gong.NewComponent(TabContentComponent{"Tab 3 Content"})),
	)
}

type TabsComponent struct{}

templ (c TabsComponent) View() {
	@styles()
	@gong.NewTarget().WithTrigger(gong.TriggerAfterSwapOOB(gong.OutletID(ctx))) {
		@tabList()
	}
	@gong.NewOutlet().WithAttrs(templ.Attributes{"style": "border-style: solid"})
}

templ (c TabsComponent) Action() {
	@tabList()
}

templ tabList() {
	{{
		activeTab := gong.ChildRoute(ctx).Path()
	}}
	<div class="tab-list">
		@tab("Tab 1", "1", activeTab)
		@tab("Tab 2", "2", activeTab)
		@tab("Tab 3", "3", activeTab)
	</div>
}

templ tab(title string, path string, activeTab string) {
	{{
		attrs := templ.Attributes{
			"class": templ.Classes("tab", templ.KV("tab-active", path == activeTab)).String(),
		}
	}}
	@gong.NewLink(path).WithAttrs(attrs) {
		{ title }
	}
}

templ styles() {
	<style type="text/css">
		.tab {
		    border-style: solid;
			border-color: black;
			color: black;
			text-decoration: none;
			padding: 4px;
			cursor: pointer
		}
		.tab-active {
			border-color: blue !important;
		}
		.tab-list {
		    display: flex;
			flex-direction: row;
			gap: 12px;
		}
	</style>
}

type TabContentComponent struct {
	content string
}

templ (c TabContentComponent) View() {
	{ c.content }
}
