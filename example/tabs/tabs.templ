package tabs

import (
	"github.com/troygilman/gong"
	"net/url"
	"strings"
)

func Route() gong.RouteBuilder {
	return gong.NewRoute("/", gong.NewComponent(TabsComponent{})).WithRoutes(
		gong.NewRoute("1", gong.NewComponent(TabContentComponent{"Tab 1 Content"})),
		gong.NewRoute("2", gong.NewComponent(TabContentComponent{"Tab 2 Content"})),
		gong.NewRoute("3", gong.NewComponent(TabContentComponent{"Tab 3 Content"})),
	)
}

type TabsComponent struct{}

templ (c TabsComponent) View() {
	@gong.NewTarget() {
		@tabList()
	}
	@gong.NewOutlet()
}

templ (c TabsComponent) Action() {
	@tabList()
}

func parseTab(url *url.URL) string {
	return strings.Split(url.EscapedPath(), "/")[1]
}

templ tabList() {
	{{
		activeTab := gong.ChildRoute(ctx).Path()
	}}
	<div style={ "display: flex", "flex-direction", "gap: 12px" }>
		@tab("Tab 1", "1", activeTab)
		@tab("Tab 2", "2", activeTab)
		@tab("Tab 3", "3", activeTab)
	</div>
}

templ tab(title string, path string, activeTab string) {
	@gong.NewLink(path).WithSwap(gong.SwapInnerHTML) {
		<div
			style={ "border-style: solid",
			"padding: 4px",
			"cursor: pointer",
			templ.KV("border-color: blue", path == activeTab) }
		>
			{ title }
		</div>
	}
}

type TabContentComponent struct {
	content string
}

templ (c TabContentComponent) View() {
	{ c.content }
}
