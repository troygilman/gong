package gong

import "context"
import "io"

// Link represents an HTMX-powered navigation link component.
// It provides a way to create client-side navigation links that update
// specific parts of the page using HTMX's AJAX capabilities.
type Link struct {
	id      string
	path    string
	swap    string
	headers []string
	trigger string
	attrs   templ.Attributes
}

// NewLink creates a new Link instance with the specified path.
// The path should be a valid route path within the application.
func NewLink(path string) Link {
	return Link{
		path:    path,
		swap:    SwapNone,
		trigger: TriggerClick,
	}
}

func (link Link) WithID(id string) Link {
	link.id = id
	return link
}

func (link Link) WithSwap(swap string) Link {
	link.swap = swap
	return link
}

func (link Link) WithHeaders(headers ...string) Link {
	link.headers = headers
	return link
}

func (link Link) WithTrigger(trigger string) Link {
	link.trigger = trigger
	return link
}

func (link Link) WithAttrs(attrs templ.Attributes) Link {
	link.attrs = attrs
	return link
}

// Render writes the link's HTML representation to the provided writer.
// It handles the rendering of the link with all configured HTMX attributes.
// Returns an error if rendering fails.
func (link Link) Render(ctx context.Context, w io.Writer) error {
	return link.component().Render(ctx, w)
}

templ (link Link) component() {
	{{
		headers := append(gongHeaders(ctx, GongRequestTypeLink), link.headers...)
	}}
	<a
		id={ link.id }
		href={ templ.URL(link.path) }
		hx-boost="true"
		hx-swap={ link.swap }
		if link.swap != SwapNone {
			hx-target={ "#" + TargetID(ctx, "") }
		}
		hx-trigger={ link.trigger }
		hx-headers={ buildHeaders(headers) }
		hx-push-url="true"
		{ link.attrs... }
	>
		{ children... }
	</a>
}
