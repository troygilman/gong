package gong

import "net/http"

templ Target(opts ...TargetOption) {
	{{
		c := targetConfig{
			method:  http.MethodGet,
			swap:    SwapInnerHTML,
			trigger: "none",
		}
		for _, opt := range opts {
			c = opt(c)
		}
	}}
	<div
		id={ ComponentID(ctx) }
		if c.method == http.MethodGet {
			hx-get
		}
		if c.method == http.MethodPost {
			hx-post
		}
		if c.method == http.MethodPatch {
			hx-patch
		}
		if c.method == http.MethodDelete {
			hx-delete
		}
		hx-trigger={ c.trigger }
		hx-target="this"
		hx-swap={ c.swap }
		hx-headers={ ActionHeaders(ctx) }
		if c.classes != nil {
			class={ c.classes }
		}
		{ c.attrs... }
	>
		{ children... }
	</div>
}

type targetConfig struct {
	method  string
	trigger string
	swap    string
	classes templ.CSSClasses
	attrs   templ.Attributes
}

type TargetOption func(targetConfig) targetConfig

func TargetWithTrigger(trigger string) TargetOption {
	return func(c targetConfig) targetConfig {
		c.trigger = trigger
		return c
	}
}

func TargetWithMethod(method string) TargetOption {
	return func(c targetConfig) targetConfig {
		c.method = method
		return c
	}
}

func TargetWithSwap(swap string) TargetOption {
	return func(c targetConfig) targetConfig {
		c.swap = swap
		return c
	}
}

func TargetWithClasses(classes ...any) TargetOption {
	return func(c targetConfig) targetConfig {
		c.classes = templ.Classes(classes...)
		return c
	}
}

func TargetWithAttrs(attrs templ.Attributes) TargetOption {
	return func(c targetConfig) targetConfig {
		c.attrs = attrs
		return c
	}
}
